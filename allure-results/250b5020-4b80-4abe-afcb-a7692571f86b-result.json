{"name": "test_add_user", "status": "broken", "statusDetails": {"message": "playwright._impl._errors.TimeoutError: Page.select_option: Timeout 30000ms exceeded.\nCall log:\nwaiting for locator(\"select[name=\\\"userType\\\"]\")", "trace": "browser = <Browser type=<BrowserType name=chromium executable_path=C:\\Users\\asus\\AppData\\Local\\ms-playwright\\chromium-1129\\chrome-win\\chrome.exe> version=128.0.6613.18>\n\n    def test_add_user(browser):\n        page = browser.new_page()\n    \n        # Step 1: Log in\n        login_page = LoginPage(page)\n        login_page.navigate(\"https://opensource-demo.orangehrmlive.com\")\n        login_page.login(\"Admin\", \"admin123\")\n    \n        # Step 2: Navigate to Admin Page\n        admin_page = AdminPage(page)\n        admin_page.navigate_to_admin_page()\n    \n        # Step 3: Search for the user 'Admin'\n        admin_page.search_user('Admin')\n    \n        # Step 4: Verify if user 'queen1234' exists\n        user_exists = admin_page.verify_user_in_results('Admin')\n        assert user_exists, \"User 'Admin' should exist in search results\"\n    \n        # Step 5: Click on the 'Add' button\n        admin_page.click_add_button()\n    \n        # Step 6: Add a new user with details\n>       admin_page.add_user(\n            role='Admin',  # Admin Role\n            emp_name='Shashank Rushiya',  # Employee Name\n            user_name='shashank.rushiya',  # Username\n            status='Enable',  # Enable status\n            password='Qwerty@123'  # Password\n        )\n\ntests\\test_add_user.py:28: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages\\admin_page.py:27: in add_user\n    self.page.select_option('select[name=\"userType\"]', value=role)  # Select role from dropdown\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\playwright\\sync_api\\_generated.py:10840: in select_option\n    self._sync(\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\playwright\\_impl\\_page.py:956: in select_option\n    return await self._main_frame.select_option(**params)\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\playwright\\_impl\\_frame.py:679: in select_option\n    return await self._channel.send(\"selectOption\", params)\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\playwright\\_impl\\_connection.py:59: in send\n    return await self._connection.wrap_api_call(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <playwright._impl._connection.Connection object at 0x000002616C304790>, cb = <function Channel.send.<locals>.<lambda> at 0x000002616EEEAD40>\nis_internal = False\n\n    async def wrap_api_call(\n        self, cb: Callable[[], Any], is_internal: bool = False\n    ) -> Any:\n        if self._api_zone.get():\n            return await cb()\n        task = asyncio.current_task(self._loop)\n        st: List[inspect.FrameInfo] = getattr(task, \"__pw_stack__\", inspect.stack())\n        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal)\n        self._api_zone.set(parsed_st)\n        try:\n            return await cb()\n        except Exception as error:\n>           raise rewrite_error(error, f\"{parsed_st['apiName']}: {error}\") from None\nE           playwright._impl._errors.TimeoutError: Page.select_option: Timeout 30000ms exceeded.\nE           Call log:\nE           waiting for locator(\"select[name=\\\"userType\\\"]\")\n\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\playwright\\_impl\\_connection.py:514: TimeoutError"}, "start": 1726051247726, "stop": 1726051292928, "uuid": "df5d1089-6f72-4d70-a5d1-7d603a512a18", "historyId": "c9f2cc7c191164617b0be49d8e39ce75", "testCaseId": "c9f2cc7c191164617b0be49d8e39ce75", "fullName": "tests.test_add_user#test_add_user", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_add_user"}, {"name": "host", "value": "Holy-Fuck"}, {"name": "thread", "value": "18400-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_add_user"}]}