{"name": "test_user_login", "status": "broken", "statusDetails": {"message": "playwright._impl._errors.TimeoutError: Locator.text_content: Timeout 30000ms exceeded.\nCall log:\nwaiting for locator(\"span.oxd-userdropdown-name\")", "trace": "login_page = <pages.login_page.LoginPage object at 0x000001D2EE920090>\n\n    def test_user_login(login_page):\n        login_page.login(USERNAME, PASSWORD)\n>       assert login_page.verify_login() == \"Virat Kohli\"\n\ntests\\test_login.py:15: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages\\login_page.py:19: in verify_login\n    return self.page.locator('span.oxd-userdropdown-name').text_content()\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\playwright\\sync_api\\_generated.py:17195: in text_content\n    self._sync(self._impl_obj.text_content(timeout=timeout))\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\playwright\\_impl\\_locator.py:607: in text_content\n    return await self._frame.text_content(\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\playwright\\_impl\\_frame.py:613: in text_content\n    return await self._channel.send(\"textContent\", locals_to_params(locals()))\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\playwright\\_impl\\_connection.py:59: in send\n    return await self._connection.wrap_api_call(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <playwright._impl._connection.Connection object at 0x000001D2ED8DF1D0>, cb = <function Channel.send.<locals>.<lambda> at 0x000001D2EEAD27A0>\nis_internal = False\n\n    async def wrap_api_call(\n        self, cb: Callable[[], Any], is_internal: bool = False\n    ) -> Any:\n        if self._api_zone.get():\n            return await cb()\n        task = asyncio.current_task(self._loop)\n        st: List[inspect.FrameInfo] = getattr(task, \"__pw_stack__\", inspect.stack())\n        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal)\n        self._api_zone.set(parsed_st)\n        try:\n            return await cb()\n        except Exception as error:\n>           raise rewrite_error(error, f\"{parsed_st['apiName']}: {error}\") from None\nE           playwright._impl._errors.TimeoutError: Locator.text_content: Timeout 30000ms exceeded.\nE           Call log:\nE           waiting for locator(\"span.oxd-userdropdown-name\")\n\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\playwright\\_impl\\_connection.py:514: TimeoutError"}, "start": 1726047831379, "stop": 1726047865515, "uuid": "648caa0b-2b82-4984-a253-2713d259124b", "historyId": "0bbebac222397b93d463e6822fa79e9c", "testCaseId": "0bbebac222397b93d463e6822fa79e9c", "fullName": "tests.test_login#test_user_login", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_login"}, {"name": "host", "value": "Holy-Fuck"}, {"name": "thread", "value": "17996-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_login"}]}